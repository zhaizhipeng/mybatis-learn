<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ysdrzp.dao.IUserDao">

    <!-- 建立 User 实体和数据库表的对应关系
        type 属性：指定实体类的全限定类名
        id 属性：给定一个唯一标识，是给查询 select 标签引用用的。-->
    <resultMap type="com.ysdrzp.model.User" id="userMap">
        <id column="id" property="userId"/>
        <result column="username" property="userName"/>
        <result column="sex" property="userSex"/>
        <result column="address" property="userAddress"/>
        <result column="birthday" property="userBirthday"/>
    </resultMap>

    <!-- 配置查询所有操作 -->
    <select id="findAll" resultMap="userMap">
        select * from user
    </select>

    <!-- 根据 id 查询 -->
    <select id="findById" resultType="com.ysdrzp.model.User" parameterType="int">
        select * from user where id = #{uid}
    </select>

    <!-- 保存用户-->
    <!--<insert id="saveUser" parameterType="com.ysdrzp.model.User">
        insert into user(username,birthday,sex,address)
        values(#{username},#{birthday},#{sex},#{address})
    </insert>-->

    <insert id="saveUser" parameterType="com.ysdrzp.model.User">
        <!-- 配置保存时获取插入的 id -->
        <selectKey keyColumn="id" keyProperty="id" resultType="int">
            select last_insert_id();
        </selectKey>
        insert into user(username,birthday,sex,address)
        values(#{username},#{birthday},#{sex},#{address})
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.ysdrzp.model.User">
        update user set username = #{username},birthday = #{birthday},sex = #{sex},
        address = #{address} where id = #{id}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{uid}
    </delete>

    <!-- 根据名称模糊查询 -->
    <!--<select id="findByName" resultType="com.ysdrzp.model.User" parameterType="String">
        select * from user where username like #{username}
    </select>-->

    <!-- 根据名称模糊查询 -->
    <select id="findByName" parameterType="string" resultType="com.ysdrzp.model.User">
        select * from user where username like '%${value}%'
    </select>

    <!-- 查询总记录条数 -->
    <select id="findTotal" resultType="int">
        select count(*) from user;
    </select>

    <!-- 根据用户名称模糊查询，参数变成一个 QueryVo 对象了 -->
    <select id="findByVo" parameterType="com.ysdrzp.model.QueryVo" resultType="com.ysdrzp.model.User">
        select * from user where username like concat(#{user.username},'%')
    </select>

</mapper>